package app.dao;

import app.model.Book;
import app.model.BookExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.session.RowBounds;

@Mapper
public interface BookMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    long countByExample(BookExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    int deleteByExample(BookExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    @Delete({
        "delete from APP1.BOOKS",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    @Insert({
        "insert into APP1.BOOKS (CREATED, UPDATED, ",
        "DISABLED, TITLE, ",
        "AUTHOR, BOOK_NUMBER, ",
        "SUMMARY, NOTE)",
        "values (#{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, ",
        "#{disabled,jdbcType=SMALLINT}, #{title,jdbcType=VARCHAR}, ",
        "#{author,jdbcType=VARCHAR}, #{bookNumber,jdbcType=VARCHAR}, ",
        "#{summary,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(Book record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    int insertSelective(Book record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    List<Book> selectByExampleWithRowbounds(BookExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    List<Book> selectByExample(BookExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "ID, CREATED, UPDATED, DISABLED, TITLE, AUTHOR, BOOK_NUMBER, SUMMARY, NOTE",
        "from APP1.BOOKS",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("app.dao.BookMapper.BaseResultMap")
    Book selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") Book record, @Param("example") BookExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") Book record, @Param("example") BookExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Book record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP1.BOOKS
     *
     * @mbg.generated
     */
    @Update({
        "update APP1.BOOKS",
        "set CREATED = #{created,jdbcType=TIMESTAMP},",
          "UPDATED = #{updated,jdbcType=TIMESTAMP},",
          "DISABLED = #{disabled,jdbcType=SMALLINT},",
          "TITLE = #{title,jdbcType=VARCHAR},",
          "AUTHOR = #{author,jdbcType=VARCHAR},",
          "BOOK_NUMBER = #{bookNumber,jdbcType=VARCHAR},",
          "SUMMARY = #{summary,jdbcType=VARCHAR},",
          "NOTE = #{note,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Book record);
}